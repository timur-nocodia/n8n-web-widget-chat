# n8n Embed Chat - Environment Configuration
# Copy this file to .env and update with your values

# ============================================
# DEPLOYMENT MODE
# ============================================
# Choose deployment mode: stateless | sqlite | production
# - stateless: No database, browser-side storage only (recommended)
# - sqlite: Lightweight file-based database with analytics
# - production: Optimized for production deployment
DEPLOYMENT_MODE=stateless

# ============================================
# SERVER CONFIGURATION
# ============================================
# Server host and port
API_HOST=0.0.0.0
API_PORT=8000

# Logging level: DEBUG | INFO | WARNING | ERROR
LOG_LEVEL=INFO

# ============================================
# n8n INTEGRATION (REQUIRED)
# ============================================
# Your n8n webhook URL for chat processing
N8N_WEBHOOK_URL=https://your-n8n-instance.com/webhook/your-webhook-id/chat

# Optional: n8n API key if your webhook requires authentication
N8N_API_KEY=

# ============================================
# SECURITY CONFIGURATION (REQUIRED)
# ============================================
# DUAL-KEY JWT SYSTEM: Uses separate keys for different security purposes

# JWT_SECRET_KEY: Internal session management (Browser ↔ Server)
# - Purpose: Long-lived session tokens stored in browser
# - Lifespan: 7-30 days for persistent sessions
# - Storage: Client-side (IndexedDB/localStorage)
# - Security: Never sent to external services (n8n)
# - Usage: Session validation, browser fingerprinting, persistent login
# Generate with: openssl rand -hex 32
JWT_SECRET_KEY=your-super-secret-jwt-key-change-this-in-production

# SESSION_SECRET_KEY: n8n webhook authentication (Server → n8n)
# - Purpose: Short-lived tokens for n8n webhook requests
# - Lifespan: 30 seconds (created fresh for each request)
# - Storage: Never stored client-side
# - Security: Separate key prevents token reuse if compromised
# - Usage: n8n workflow authentication and validation
# Generate with: openssl rand -hex 32
SESSION_SECRET_KEY=your-session-secret-key-change-this-in-production

# IMPORTANT: These keys serve different purposes in the security architecture:
# 1. JWT_SECRET_KEY = Internal session management (long-lived, client-stored)
# 2. SESSION_SECRET_KEY = n8n integration (short-lived, server-only)
# 
# Benefits of dual-key system:
# - Compromise isolation: If one key is breached, the other remains secure
# - Scope limitation: Internal tokens never leave your infrastructure
# - Time-based security: n8n tokens expire in 30 seconds vs days for internal
# - Service isolation: n8n cannot use tokens to access your session system

# JWT algorithm and expiration
JWT_ALGORITHM=HS256
JWT_EXPIRATION_SECONDS=30  # For n8n tokens (short-lived)
JWT_EXPIRATION_HOURS=24    # For internal session tokens

# ============================================
# CORS CONFIGURATION
# ============================================
# Allowed origins (comma-separated list of domains that can embed the widget)
# Example: https://yoursite.com,https://app.yoursite.com
ALLOWED_ORIGINS=http://localhost:8000,http://localhost:3000,http://localhost:5173

# Allow credentials in CORS requests
CORS_ALLOW_CREDENTIALS=true

# ============================================
# RATE LIMITING
# ============================================
# Rate limits per time window
RATE_LIMIT_PER_MINUTE=60
RATE_LIMIT_PER_HOUR=1000

# ============================================
# SESSION CONFIGURATION
# ============================================
# Session cookie settings
SESSION_COOKIE_NAME=chat_session_id
SESSION_COOKIE_MAX_AGE=86400  # 24 hours in seconds

# ============================================
# SQLITE MODE CONFIGURATION (Optional)
# ============================================
# Only used when DEPLOYMENT_MODE=sqlite
SQLITE_DB_PATH=chat_sessions.db

# Database connection pool settings (SQLite mode)
SQLITE_POOL_SIZE=5
SQLITE_MAX_OVERFLOW=10

# ============================================
# PRODUCTION MODE CONFIGURATION (Optional)
# ============================================
# Only used when DEPLOYMENT_MODE=production
# Number of worker processes (set to CPU cores * 2 + 1)
WORKERS=4

# Worker class for async handling
WORKER_CLASS=uvicorn.workers.UvicornWorker

# Request timeout in seconds
TIMEOUT=30

# Maximum number of requests a worker will process before restarting
MAX_REQUESTS=1000
MAX_REQUESTS_JITTER=50

# ============================================
# MONITORING & HEALTH CHECKS (Optional)
# ============================================
# Enable metrics endpoint
ENABLE_METRICS=true

# Health check endpoint configuration
HEALTH_CHECK_ENABLED=true
HEALTH_CHECK_PATH=/health

# ============================================
# WIDGET CONFIGURATION (Optional)
# ============================================
# Widget title and branding
WIDGET_TITLE="Chat Support"
WIDGET_PLACEHOLDER="Type your message..."
WIDGET_WELCOME_MESSAGE="Hello! How can I help you today?"

# Widget appearance
WIDGET_POSITION=bottom-right  # bottom-right | bottom-left
WIDGET_THEME=light  # light | dark | auto

# ============================================
# DOCKER CONFIGURATION (Optional)
# ============================================
# Used when running with Docker Compose
# Docker container name
CONTAINER_NAME=n8n-chat-proxy

# Docker image tag
IMAGE_TAG=latest

# Docker network name
NETWORK_NAME=n8n-chat-network

# ============================================
# DEVELOPMENT CONFIGURATION (Optional)
# ============================================
# Enable debug mode (NEVER use in production)
DEBUG=false

# Enable hot reload (development only)
HOT_RELOAD=false

# Mock n8n responses (for testing without n8n)
MOCK_N8N_RESPONSES=false

# ============================================
# NOTES
# ============================================
# 1. NEVER commit the actual .env file to version control
# 2. Always use strong, unique secrets in production
# 3. Update ALLOWED_ORIGINS with your actual domains
# 4. Adjust rate limits based on your expected traffic
# 5. For production, set LOG_LEVEL=WARNING or ERROR
# 6. Use HTTPS URLs for production n8n webhooks